{
  "compilerOptions": {
    "target": "ESNext",
    "module": "CommonJS",
    "lib": ["ESNext", "DOM"],
    "moduleResolution": "node",
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "strict": true,
    "skipLibCheck": true,
    "types": ["node", "playwright"],
    "outDir": "dist"
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to .tsbuildinfo incremental compilation file. */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    // "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    // "jsx": "preserve",                                /* Specify what JSX code is generated. */
    // "libReplacement": true,                           /* Enable lib replacement. */
    // "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
    // "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
    // "jsxFactory": "",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */
    // "jsxFragmentFactory": "",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */
    // "jsxImportSource": "",                            /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */
    // "reactNamespace": "",                             /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */
    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */
    // "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */

    /* Modules */
    // "module": "commonjs",                                /* Specify what module code is generated. */
    // "rootDir": "./",                                  /* Specify the root folder within your source files. */
    // "moduleResolution": "node10",                     /* Specify how TypeScript looks up a file from a given module specifier. */
    // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
    // "typeRoots": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */
    // "types": [],                                      /* Specify type package names to be included without being referenced in a source file. */
    // "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
    // "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */
    // "allowImportingTsExtensions": true,               /* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */
    // "rewriteRelativeImportExtensions": true,          /* Rewrite file extensions in relative import paths. */
    // "resolvePackageJsonExports": true,                /* Use the package.json 'exports' field when resolving package imports. */
    // "resolvePackageJsonImports": true,                /* Use the package.json 'imports' field when resolving imports. */
    // "customConditions": [],                           /* Add custom conditions when resolving imports. */
    // "noUncheckedSideEffectImports": true,             /* Check side effect imports. */
    // "resolveJsonModule": true,                        /* Enable importing .json files. */
    // "allowArbitraryExtensions": true,                 /* Allow importing files with any extension if a declaration file is present. */
    // "noResolve": true,                                /* Disallow module expansion via 'import', 'require' or '<reference>'. */

    /* JavaScript Support */
    // "allowJs": true,                                  /* Allow JavaScript files to be part of the compilation. */
    // "checkJs": true,                                  /* Enable type checking in JavaScript files. */
    // "maxNodeModuleJsDepth": 1,                        /* Max depth for checking JS files in node_modules. */

    /* Emit */
    // "declaration": true,                              /* Generate .d.ts files. */
    // "declarationMap": true,                           /* Create sourcemaps for d.ts files. */
    // "emitDeclarationOnly": true,                      /* Only emit .d.ts files. */
    // "sourceMap": true,                                /* Create source maps for debugging. */
    // "inlineSourceMap": true,                          /* Include sourcemaps inside emitted JS. */
    // "noEmit": true,                                   /* Don't emit output files. */
    // "outFile": "./",                                  /* Bundle all outputs into one file. */
    // "outDir": "./",                                   /* Output directory for emitted files. */
    // "removeComments": true,                           /* Remove comments in emitted output. */
    // "importHelpers": true,                            /* Use tslib for helpers. */
    // "downlevelIteration": true,                       /* More compliant iteration emit. */
    // "sourceRoot": "",                                 /* Source root for debuggers. */
    // "mapRoot": "",                                    /* Map root for debuggers. */
    // "inlineSources": true,                            /* Include source in sourcemaps. */
    // "emitBOM": true,                                  /* Emit BOM at start of output files. */
    // "newLine": "crlf",                                /* Line ending style. */
    // "stripInternal": true,                            /* Don't emit declarations with @internal. */
    // "noEmitHelpers": true,                            /* Don't emit custom helper functions. */
    // "noEmitOnError": true,                            /* Don't emit if type errors exist. */
    // "preserveConstEnums": true,                       /* Don't erase const enums. */
    // "declarationDir": "./",                           /* Directory for declaration files. */

    /* Interop Constraints */
    // "isolatedModules": true,                          /* Ensure each file can be transpiled in isolation. */
    // "verbatimModuleSyntax": true,                     /* Don't transform or elide import/export syntax. */
    // "isolatedDeclarations": true,                     /* Require proper export annotations. */
    // "erasableSyntaxOnly": true,                       /* Don't allow non-ECMAScript runtime constructs. */
    // "allowSyntheticDefaultImports": true,             /* Allow synthetic default imports. */
    // "esModuleInterop": true,                             /* Support importing CommonJS modules in ESM style. */
    // "preserveSymlinks": true,                         /* Don't resolve symlinks to real paths. */

    /* Type Checking */
    // "strict": true,                                      /* Enable all strict type checks. */
    // "noImplicitAny": true,                            /* Warn on inferred 'any' types. */
    // "strictNullChecks": true,                         /* Enable strict null checks. */
    // "strictFunctionTypes": true,                      /* Enable strict function type checks. */
    // "strictBindCallApply": true,                      /* Strict checks for 'bind', 'call', and 'apply'. */
    // "strictPropertyInitialization": true,             /* Require class property initialization. */
    // "strictBuiltinIteratorReturn": true,              /* Enforce proper return type on built-in iterators. */
    // "noImplicitThis": true,                           /* Error on 'this' with implied any. */
    // "useUnknownInCatchVariables": true,               /* Use 'unknown' for catch clause variables. */
    // "alwaysStrict": true,                             /* Emit 'use strict'. */
    // "noUnusedLocals": true,                           /* Warn on unused locals. */
    // "noUnusedParameters": true,                       /* Warn on unused parameters. */
    // "exactOptionalPropertyTypes": true,               /* Enforce exact optional property types. */
    // "noImplicitReturns": true,                        /* Warn on code paths with missing returns. */
    // "noFallthroughCasesInSwitch": true,               /* Warn on fallthrough in switch cases. */
    // "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to index access results. */
    // "noImplicitOverride": true,                       /* Require 'override' modifier on overriding members. */
    // "noPropertyAccessFromIndexSignature": true,       /* Enforce using indexed access syntax. */
    // "allowUnusedLabels": true,                        /* Disable unused label errors. */
    // "allowUnreachableCode": true,                     /* Disable unreachable code errors. */

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip checking default lib.d.ts files. */
    // "skipLibCheck": true                                 /* Skip type checking for all declaration files. */
  },
  "include": ["steps/**/*.ts", "tests/**/*.ts"]
}
